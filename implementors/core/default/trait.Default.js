(function() {var implementors = {
"ansi_term":[["impl Default for <a class=\"struct\" href=\"ansi_term/struct.Style.html\" title=\"struct ansi_term::Style\">Style</a>"]],
"ascii":[["impl Default for <a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>"],["impl Default for &amp;'static <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>"],["impl Default for <a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>"]],
"bytes":[["impl Default for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>"],["impl Default for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>"]],
"clap":[["impl&lt;'a, 'b&gt; Default for <a class=\"struct\" href=\"clap/struct.Arg.html\" title=\"struct clap::Arg\">Arg</a>&lt;'a, 'b&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'b,</span>"],["impl&lt;'a&gt; Default for <a class=\"struct\" href=\"clap/struct.ArgMatches.html\" title=\"struct clap::ArgMatches\">ArgMatches</a>&lt;'a&gt;"],["impl&lt;'a&gt; Default for <a class=\"struct\" href=\"clap/struct.Values.html\" title=\"struct clap::Values\">Values</a>&lt;'a&gt;"],["impl&lt;'a&gt; Default for <a class=\"struct\" href=\"clap/struct.OsValues.html\" title=\"struct clap::OsValues\">OsValues</a>&lt;'a&gt;"],["impl&lt;'a&gt; Default for <a class=\"struct\" href=\"clap/struct.ArgGroup.html\" title=\"struct clap::ArgGroup\">ArgGroup</a>&lt;'a&gt;"]],
"crossbeam_channel":[["impl&lt;'a&gt; Default for <a class=\"struct\" href=\"crossbeam_channel/struct.Select.html\" title=\"struct crossbeam_channel::Select\">Select</a>&lt;'a&gt;"]],
"crossbeam_deque":[["impl&lt;T&gt; Default for <a class=\"struct\" href=\"crossbeam_deque/struct.Injector.html\" title=\"struct crossbeam_deque::Injector\">Injector</a>&lt;T&gt;"]],
"crossbeam_epoch":[["impl&lt;T:&nbsp;?Sized + <a class=\"trait\" href=\"crossbeam_epoch/trait.Pointable.html\" title=\"trait crossbeam_epoch::Pointable\">Pointable</a>&gt; Default for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;"],["impl&lt;T:&nbsp;?Sized + <a class=\"trait\" href=\"crossbeam_epoch/trait.Pointable.html\" title=\"trait crossbeam_epoch::Pointable\">Pointable</a>&gt; Default for <a class=\"struct\" href=\"crossbeam_epoch/struct.Shared.html\" title=\"struct crossbeam_epoch::Shared\">Shared</a>&lt;'_, T&gt;"],["impl Default for <a class=\"struct\" href=\"crossbeam_epoch/struct.Collector.html\" title=\"struct crossbeam_epoch::Collector\">Collector</a>"]],
"crossbeam_utils":[["impl&lt;T:&nbsp;Default&gt; Default for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;"],["impl&lt;T:&nbsp;Default&gt; Default for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt;"],["impl Default for <a class=\"struct\" href=\"crossbeam_utils/struct.Backoff.html\" title=\"struct crossbeam_utils::Backoff\">Backoff</a>"],["impl Default for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Parker.html\" title=\"struct crossbeam_utils::sync::Parker\">Parker</a>"],["impl&lt;T:&nbsp;Default&gt; Default for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLock.html\" title=\"struct crossbeam_utils::sync::ShardedLock\">ShardedLock</a>&lt;T&gt;"],["impl Default for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.WaitGroup.html\" title=\"struct crossbeam_utils::sync::WaitGroup\">WaitGroup</a>"]],
"hermit_abi":[["impl Default for <a class=\"struct\" href=\"hermit_abi/struct.Handle.html\" title=\"struct hermit_abi::Handle\">Handle</a>"],["impl Default for <a class=\"struct\" href=\"hermit_abi/struct.Ipv4Address.html\" title=\"struct hermit_abi::Ipv4Address\">Ipv4Address</a>"],["impl Default for <a class=\"struct\" href=\"hermit_abi/struct.Ipv6Address.html\" title=\"struct hermit_abi::Ipv6Address\">Ipv6Address</a>"]],
"rayon_core":[["impl Default for <a class=\"struct\" href=\"rayon_core/struct.Configuration.html\" title=\"struct rayon_core::Configuration\">Configuration</a>"],["impl Default for <a class=\"struct\" href=\"rayon_core/struct.ThreadPoolBuilder.html\" title=\"struct rayon_core::ThreadPoolBuilder\">ThreadPoolBuilder</a>"]],
"tiny_http":[["impl Default for <a class=\"struct\" href=\"tiny_http/struct.TestRequest.html\" title=\"struct tiny_http::TestRequest\">TestRequest</a>"]],
"vec_map":[["impl&lt;V&gt; Default for <a class=\"struct\" href=\"vec_map/struct.VecMap.html\" title=\"struct vec_map::VecMap\">VecMap</a>&lt;V&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()