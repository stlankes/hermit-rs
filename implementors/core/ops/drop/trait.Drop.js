(function() {var implementors = {
"bytes":[["impl Drop for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>"],["impl Drop for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>"]],
"chunked_transfer":[["impl&lt;W&gt; Drop for <a class=\"struct\" href=\"chunked_transfer/struct.Encoder.html\" title=\"struct chunked_transfer::Encoder\">Encoder</a>&lt;W&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Write,</span>"]],
"crossbeam_channel":[["impl&lt;T&gt; Drop for <a class=\"struct\" href=\"crossbeam_channel/struct.Sender.html\" title=\"struct crossbeam_channel::Sender\">Sender</a>&lt;T&gt;"],["impl&lt;T&gt; Drop for <a class=\"struct\" href=\"crossbeam_channel/struct.Receiver.html\" title=\"struct crossbeam_channel::Receiver\">Receiver</a>&lt;T&gt;"],["impl Drop for <a class=\"struct\" href=\"crossbeam_channel/struct.SelectedOperation.html\" title=\"struct crossbeam_channel::SelectedOperation\">SelectedOperation</a>&lt;'_&gt;"]],
"crossbeam_deque":[["impl&lt;T&gt; Drop for <a class=\"struct\" href=\"crossbeam_deque/struct.Injector.html\" title=\"struct crossbeam_deque::Injector\">Injector</a>&lt;T&gt;"]],
"crossbeam_epoch":[["impl&lt;T:&nbsp;?Sized + <a class=\"trait\" href=\"crossbeam_epoch/trait.Pointable.html\" title=\"trait crossbeam_epoch::Pointable\">Pointable</a>&gt; Drop for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;"],["impl Drop for <a class=\"struct\" href=\"crossbeam_epoch/struct.LocalHandle.html\" title=\"struct crossbeam_epoch::LocalHandle\">LocalHandle</a>"],["impl Drop for <a class=\"struct\" href=\"crossbeam_epoch/struct.Guard.html\" title=\"struct crossbeam_epoch::Guard\">Guard</a>"]],
"crossbeam_utils":[["impl&lt;T&gt; Drop for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;"],["impl&lt;T:&nbsp;?Sized&gt; Drop for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockWriteGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockWriteGuard\">ShardedLockWriteGuard</a>&lt;'_, T&gt;"],["impl Drop for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.WaitGroup.html\" title=\"struct crossbeam_utils::sync::WaitGroup\">WaitGroup</a>"]],
"rayon":[["impl&lt;'a, T:&nbsp;Ord + Send&gt; Drop for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.Drain.html\" title=\"struct rayon::collections::binary_heap::Drain\">Drain</a>&lt;'a, T&gt;"],["impl&lt;'a, T:&nbsp;Send&gt; Drop for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.Drain.html\" title=\"struct rayon::collections::vec_deque::Drain\">Drain</a>&lt;'a, T&gt;"],["impl&lt;'a&gt; Drop for <a class=\"struct\" href=\"rayon/string/struct.Drain.html\" title=\"struct rayon::string::Drain\">Drain</a>&lt;'a&gt;"],["impl&lt;'data, T:&nbsp;Send&gt; Drop for <a class=\"struct\" href=\"rayon/vec/struct.Drain.html\" title=\"struct rayon::vec::Drain\">Drain</a>&lt;'data, T&gt;"]],
"rayon_core":[["impl Drop for <a class=\"struct\" href=\"rayon_core/struct.ThreadPool.html\" title=\"struct rayon_core::ThreadPool\">ThreadPool</a>"]],
"scopeguard":[["impl&lt;T, F, S&gt; Drop for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(T),<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"scopeguard/trait.Strategy.html\" title=\"trait scopeguard::Strategy\">Strategy</a>,</span>"]],
"tiny_http":[["impl Drop for <a class=\"struct\" href=\"tiny_http/struct.Request.html\" title=\"struct tiny_http::Request\">Request</a>"],["impl Drop for <a class=\"struct\" href=\"tiny_http/struct.Server.html\" title=\"struct tiny_http::Server\">Server</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()