(function() {var implementors = {
"ascii":[["impl Error for <a class=\"struct\" href=\"ascii/struct.ToAsciiCharError.html\" title=\"struct ascii::ToAsciiCharError\">ToAsciiCharError</a>"],["impl Error for <a class=\"struct\" href=\"ascii/struct.AsAsciiStrError.html\" title=\"struct ascii::AsAsciiStrError\">AsAsciiStrError</a>"],["impl&lt;O:&nbsp;Any&gt; Error for <a class=\"struct\" href=\"ascii/struct.FromAsciiError.html\" title=\"struct ascii::FromAsciiError\">FromAsciiError</a>&lt;O&gt;"]],
"clap":[["impl Error for <a class=\"struct\" href=\"clap/struct.Error.html\" title=\"struct clap::Error\">Error</a>"]],
"crossbeam_channel":[["impl&lt;T:&nbsp;Send&gt; Error for <a class=\"struct\" href=\"crossbeam_channel/struct.SendError.html\" title=\"struct crossbeam_channel::SendError\">SendError</a>&lt;T&gt;"],["impl&lt;T:&nbsp;Send&gt; Error for <a class=\"enum\" href=\"crossbeam_channel/enum.TrySendError.html\" title=\"enum crossbeam_channel::TrySendError\">TrySendError</a>&lt;T&gt;"],["impl&lt;T:&nbsp;Send&gt; Error for <a class=\"enum\" href=\"crossbeam_channel/enum.SendTimeoutError.html\" title=\"enum crossbeam_channel::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt;"],["impl Error for <a class=\"struct\" href=\"crossbeam_channel/struct.RecvError.html\" title=\"struct crossbeam_channel::RecvError\">RecvError</a>"],["impl Error for <a class=\"enum\" href=\"crossbeam_channel/enum.TryRecvError.html\" title=\"enum crossbeam_channel::TryRecvError\">TryRecvError</a>"],["impl Error for <a class=\"enum\" href=\"crossbeam_channel/enum.RecvTimeoutError.html\" title=\"enum crossbeam_channel::RecvTimeoutError\">RecvTimeoutError</a>"],["impl Error for <a class=\"struct\" href=\"crossbeam_channel/struct.TrySelectError.html\" title=\"struct crossbeam_channel::TrySelectError\">TrySelectError</a>"],["impl Error for <a class=\"struct\" href=\"crossbeam_channel/struct.SelectTimeoutError.html\" title=\"struct crossbeam_channel::SelectTimeoutError\">SelectTimeoutError</a>"]],
"httpdate":[["impl Error for <a class=\"struct\" href=\"httpdate/struct.Error.html\" title=\"struct httpdate::Error\">Error</a>"]],
"rayon_core":[["impl Error for <a class=\"struct\" href=\"rayon_core/struct.ThreadPoolBuildError.html\" title=\"struct rayon_core::ThreadPoolBuildError\">ThreadPoolBuildError</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()