(function() {var implementors = {
"ansi_term":[["impl From&lt;<a class=\"enum\" href=\"ansi_term/enum.Colour.html\" title=\"enum ansi_term::Colour\">Colour</a>&gt; for <a class=\"struct\" href=\"ansi_term/struct.Style.html\" title=\"struct ansi_term::Style\">Style</a>"],["impl&lt;'a, I, S:&nbsp;'a + ToOwned + ?Sized&gt; From&lt;I&gt; for <a class=\"struct\" href=\"ansi_term/struct.ANSIGenericString.html\" title=\"struct ansi_term::ANSIGenericString\">ANSIGenericString</a>&lt;'a, S&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Into&lt;Cow&lt;'a, S&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Debug,</span>"]],
"ascii":[["impl From&lt;<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>&gt; for u8"],["impl From&lt;<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>&gt; for char"],["impl&lt;'a&gt; From&lt;&amp;'a [<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>]&gt; for &amp;'a <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>"],["impl&lt;'a&gt; From&lt;&amp;'a mut [<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>]&gt; for &amp;'a mut <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>"],["impl From&lt;Box&lt;[<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>], Global&gt;&gt; for Box&lt;<a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt;"],["impl&lt;'a&gt; From&lt;&amp;'a <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt; for &amp;'a [<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>]"],["impl&lt;'a&gt; From&lt;&amp;'a mut <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt; for &amp;'a mut [<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>]"],["impl&lt;'a&gt; From&lt;&amp;'a <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt; for &amp;'a [u8]"],["impl&lt;'a&gt; From&lt;&amp;'a <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt; for &amp;'a str"],["impl From&lt;Box&lt;<a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>, Global&gt;&gt; for Box&lt;[<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>]&gt;"],["impl From&lt;Box&lt;<a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>, Global&gt;&gt; for Box&lt;[u8]&gt;"],["impl From&lt;Box&lt;<a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>, Global&gt;&gt; for Box&lt;str&gt;"],["impl From&lt;Vec&lt;<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>, Global&gt;&gt; for <a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>"],["impl From&lt;<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>&gt; for <a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>"],["impl From&lt;<a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>&gt; for Vec&lt;u8&gt;"],["impl From&lt;<a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>&gt; for Vec&lt;<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>&gt;"],["impl&lt;'a&gt; From&lt;&amp;'a <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt; for <a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>"],["impl&lt;'a&gt; From&lt;&amp;'a [<a class=\"enum\" href=\"ascii/enum.AsciiChar.html\" title=\"enum ascii::AsciiChar\">AsciiChar</a>]&gt; for <a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>"],["impl From&lt;<a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>&gt; for String"],["impl From&lt;Box&lt;<a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>, Global&gt;&gt; for <a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>"],["impl From&lt;<a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>&gt; for Box&lt;<a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt;"],["impl From&lt;<a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>&gt; for Rc&lt;<a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt;"],["impl From&lt;<a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>&gt; for Arc&lt;<a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt;"],["impl&lt;'a&gt; From&lt;Cow&lt;'a, <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt;&gt; for <a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>"],["impl From&lt;<a class=\"struct\" href=\"ascii/struct.AsciiString.html\" title=\"struct ascii::AsciiString\">AsciiString</a>&gt; for Cow&lt;'static, <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt;"],["impl&lt;'a&gt; From&lt;&amp;'a <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt; for Cow&lt;'a, <a class=\"struct\" href=\"ascii/struct.AsciiStr.html\" title=\"struct ascii::AsciiStr\">AsciiStr</a>&gt;"]],
"bytes":[["impl From&lt;&amp;'static [u8]&gt; for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>"],["impl From&lt;&amp;'static str&gt; for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>"],["impl From&lt;Vec&lt;u8, Global&gt;&gt; for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>"],["impl From&lt;Box&lt;[u8], Global&gt;&gt; for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>"],["impl From&lt;String&gt; for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>"],["impl From&lt;<a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>&gt; for Vec&lt;u8&gt;"],["impl&lt;'a&gt; From&lt;&amp;'a [u8]&gt; for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>"],["impl&lt;'a&gt; From&lt;&amp;'a str&gt; for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>"],["impl From&lt;<a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>&gt; for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>"],["impl From&lt;<a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>&gt; for Vec&lt;u8&gt;"]],
"clap":[["impl&lt;'a, 'b, 'z&gt; From&lt;&amp;'z <a class=\"struct\" href=\"clap/struct.Arg.html\" title=\"struct clap::Arg\">Arg</a>&lt;'a, 'b&gt;&gt; for <a class=\"struct\" href=\"clap/struct.Arg.html\" title=\"struct clap::Arg\">Arg</a>&lt;'a, 'b&gt;"],["impl&lt;'a, 'z&gt; From&lt;&amp;'z <a class=\"struct\" href=\"clap/struct.ArgGroup.html\" title=\"struct clap::ArgGroup\">ArgGroup</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"clap/struct.ArgGroup.html\" title=\"struct clap::ArgGroup\">ArgGroup</a>&lt;'a&gt;"],["impl From&lt;Error&gt; for <a class=\"struct\" href=\"clap/struct.Error.html\" title=\"struct clap::Error\">Error</a>"],["impl From&lt;Error&gt; for <a class=\"struct\" href=\"clap/struct.Error.html\" title=\"struct clap::Error\">Error</a>"]],
"crossbeam_channel":[["impl&lt;T&gt; From&lt;<a class=\"struct\" href=\"crossbeam_channel/struct.SendError.html\" title=\"struct crossbeam_channel::SendError\">SendError</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"crossbeam_channel/enum.TrySendError.html\" title=\"enum crossbeam_channel::TrySendError\">TrySendError</a>&lt;T&gt;"],["impl&lt;T&gt; From&lt;<a class=\"struct\" href=\"crossbeam_channel/struct.SendError.html\" title=\"struct crossbeam_channel::SendError\">SendError</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"crossbeam_channel/enum.SendTimeoutError.html\" title=\"enum crossbeam_channel::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt;"],["impl From&lt;<a class=\"struct\" href=\"crossbeam_channel/struct.RecvError.html\" title=\"struct crossbeam_channel::RecvError\">RecvError</a>&gt; for <a class=\"enum\" href=\"crossbeam_channel/enum.TryRecvError.html\" title=\"enum crossbeam_channel::TryRecvError\">TryRecvError</a>"],["impl From&lt;<a class=\"struct\" href=\"crossbeam_channel/struct.RecvError.html\" title=\"struct crossbeam_channel::RecvError\">RecvError</a>&gt; for <a class=\"enum\" href=\"crossbeam_channel/enum.RecvTimeoutError.html\" title=\"enum crossbeam_channel::RecvTimeoutError\">RecvTimeoutError</a>"]],
"crossbeam_epoch":[["impl&lt;T:&nbsp;?Sized + <a class=\"trait\" href=\"crossbeam_epoch/trait.Pointable.html\" title=\"trait crossbeam_epoch::Pointable\">Pointable</a>&gt; From&lt;<a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;"],["impl&lt;T&gt; From&lt;Box&lt;T, Global&gt;&gt; for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;"],["impl&lt;T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;"],["impl&lt;'g, T:&nbsp;?Sized + <a class=\"trait\" href=\"crossbeam_epoch/trait.Pointable.html\" title=\"trait crossbeam_epoch::Pointable\">Pointable</a>&gt; From&lt;<a class=\"struct\" href=\"crossbeam_epoch/struct.Shared.html\" title=\"struct crossbeam_epoch::Shared\">Shared</a>&lt;'g, T&gt;&gt; for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;"],["impl&lt;T&gt; From&lt;*const T&gt; for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;"],["impl&lt;T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;"],["impl&lt;T&gt; From&lt;Box&lt;T, Global&gt;&gt; for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;"],["impl&lt;T&gt; From&lt;*const T&gt; for <a class=\"struct\" href=\"crossbeam_epoch/struct.Shared.html\" title=\"struct crossbeam_epoch::Shared\">Shared</a>&lt;'_, T&gt;"]],
"crossbeam_utils":[["impl&lt;T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;"],["impl&lt;T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt;"],["impl&lt;T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLock.html\" title=\"struct crossbeam_utils::sync::ShardedLock\">ShardedLock</a>&lt;T&gt;"]],
"either":[["impl&lt;L, R&gt; From&lt;Result&lt;R, L&gt;&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt;"]],
"httpdate":[["impl From&lt;SystemTime&gt; for <a class=\"struct\" href=\"httpdate/struct.HttpDate.html\" title=\"struct httpdate::HttpDate\">HttpDate</a>"],["impl From&lt;<a class=\"struct\" href=\"httpdate/struct.HttpDate.html\" title=\"struct httpdate::HttpDate\">HttpDate</a>&gt; for SystemTime"],["impl From&lt;<a class=\"struct\" href=\"httpdate/struct.Error.html\" title=\"struct httpdate::Error\">Error</a>&gt; for Error"]],
"tiny_http":[["impl From&lt;i8&gt; for <a class=\"struct\" href=\"tiny_http/struct.StatusCode.html\" title=\"struct tiny_http::StatusCode\">StatusCode</a>"],["impl From&lt;u8&gt; for <a class=\"struct\" href=\"tiny_http/struct.StatusCode.html\" title=\"struct tiny_http::StatusCode\">StatusCode</a>"],["impl From&lt;i16&gt; for <a class=\"struct\" href=\"tiny_http/struct.StatusCode.html\" title=\"struct tiny_http::StatusCode\">StatusCode</a>"],["impl From&lt;u16&gt; for <a class=\"struct\" href=\"tiny_http/struct.StatusCode.html\" title=\"struct tiny_http::StatusCode\">StatusCode</a>"],["impl From&lt;i32&gt; for <a class=\"struct\" href=\"tiny_http/struct.StatusCode.html\" title=\"struct tiny_http::StatusCode\">StatusCode</a>"],["impl From&lt;u32&gt; for <a class=\"struct\" href=\"tiny_http/struct.StatusCode.html\" title=\"struct tiny_http::StatusCode\">StatusCode</a>"],["impl From&lt;(u8, u8)&gt; for <a class=\"struct\" href=\"tiny_http/struct.HTTPVersion.html\" title=\"struct tiny_http::HTTPVersion\">HTTPVersion</a>"],["impl From&lt;TcpListener&gt; for <a class=\"enum\" href=\"tiny_http/enum.Listener.html\" title=\"enum tiny_http::Listener\">Listener</a>"],["impl From&lt;SocketAddr&gt; for <a class=\"enum\" href=\"tiny_http/enum.ListenAddr.html\" title=\"enum tiny_http::ListenAddr\">ListenAddr</a>"],["impl From&lt;<a class=\"struct\" href=\"tiny_http/struct.TestRequest.html\" title=\"struct tiny_http::TestRequest\">TestRequest</a>&gt; for <a class=\"struct\" href=\"tiny_http/struct.Request.html\" title=\"struct tiny_http::Request\">Request</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()